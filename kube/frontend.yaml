kind: Service
apiVersion: v1
metadata:
  name: google-atlas
  namespace: aaas
  labels:
    k8s-app: google-atlas
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    k8s-app: google-atlas
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: google-atlas
  namespace: aaas
  labels:
    k8s-app: google-atlas
  annotations:
    kubernetes.io/ingress.class: slate
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - google.atlas-ml.org
      secretName: auto-generated-google-atlas
  rules:
    - host: google.atlas-ml.org
      http:
        paths:
          - path: /
            backend:
              serviceName: google-atlas
              servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: google-atlas
  namespace: aaas
  labels:
    k8s-app: google-atlas
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: google-atlas
  template:
    metadata:
      labels:
        k8s-app: google-atlas
    spec:
      containers:
        - name: google-atlas
          image: ivukotic/google-atlas:latest
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 80
            periodSeconds: 60
            initialDelaySeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - name: frontend-conf-volume
              mountPath: "/etc/gaconf/"
      volumes:
        - name: frontend-conf-volume
          secret:
            secretName: gaconfig
            items:
              - key: gaconf
                path: config.json
